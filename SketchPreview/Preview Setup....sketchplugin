// Configure the preview size (cmd option p)

// Copyright (c) 2014 Marc Schwieterman
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.


#import 'lib/common.js'

function requestPreviewSize(config) {
  if (!isSupportedVersion()) {
    [doc showMessage:"Sketch 2 is not supported"]
    return
  }

  var accessory = [[NSView alloc] initWithFrame:NSMakeRect(0, 0, 200, 50)]

  var displayZoomButton = [[NSButton alloc] initWithFrame:NSMakeRect(0, 25, 200, 25)]
  [displayZoomButton setButtonType:NSSwitchButton]
  [displayZoomButton setTitle:"Simulate iPhone Display Zoom"]
  [displayZoomButton setState:(config.shouldSimulateDisplayZoom() ? NSOnState : NSOffState)]
  [accessory addSubview:displayZoomButton]

  var sizeComboBox = [[NSComboBox alloc] initWithFrame:NSMakeRect(0,0,200,25)]
  [sizeComboBox addItemsWithObjectValues:config.PREVIEW_SIZE_LABELS]
  [sizeComboBox selectItemAtIndex:config.getPreviewSizeLabelIndex()]
  [accessory addSubview:sizeComboBox]

  var alert = [[NSAlert alloc] init]
  [alert setMessageText:"Choose preview options"]
  [alert addButtonWithTitle:"Save"]
  [alert addButtonWithTitle:"Cancel"]
  [alert setAccessoryView:accessory]

  var buttonReturnValue = [alert runModal]
  var previewSizeLabelIndex = [sizeComboBox indexOfSelectedItem]
  var simulateDisplayZoom = [displayZoomButton state] === NSOnState

  if (buttonReturnValue === NSAlertFirstButtonReturn) {
    config.setPreviewSizeLabelIndex(previewSizeLabelIndex)
    config.setSimulateDisplayZoom(simulateDisplayZoom)
    config.save()
  }
}

var config = new Config()

requestPreviewSize(config)

